{"version":3,"sources":["utils/api.js","contexts/CurrentUserContext.js","images/logo.svg","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/ConfirmDeletionPopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","fetch","method","then","_checkResponse","all","getUserInfo","getInitialCards","data","body","JSON","stringify","id","isLiked","authorization","CurrentUserContext","React","createContext","Header","memo","props","className","src","Logo","alt","Card","currentUser","useContext","isOwn","card","owner","_id","likes","some","i","cardDeleteButtonClassName","cardLikeButtonClassName","type","aria-label","onClick","onCardDelete","link","name","onCardClick","onCardLike","length","Main","avatar","onEditAvatar","about","onEditProfile","area-label","onAddPlace","cards","map","Footer","Date","getFullYear","PopupWithForm","isOpen","onClose","onSubmit","title","children","subtitle","EditProfilePopup","useState","userName","description","formValues","setFormValues","handleInputChange","e","target","value","prevState","useEffect","preventDefault","onUpdateUser","placeholder","onChange","EditAvatarPopup","setAvatar","onUpdateAvatar","minLength","maxLength","AddPlacePopup","setName","setLink","ImagePopup","ConfirmDeletionPopup","onDeleteCard","App","setCurrentUser","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletionPopupOpen","setIsConfirmDeletionPopupOpen","selectedCard","setSelectedCard","removedCard","setRemovedCard","closeAllPopups","getAllNeededData","argument","catch","err","alert","Provider","changeLikeCardStatus","newCard","newCards","c","setUserInfo","setNewCard","setUserAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09f48a6a.chunk.js","sourcesContent":[" class Api {\n     constructor(config) {\n         this._url = config.url;\n         this._headers = config.headers;\n     }\n\n     _checkResponse(res) {\n         return res.ok ? res.json() : Promise.reject(\"Произошла ошибка\");\n     }\n\n     getInitialCards() {\n         return fetch(`${this._url}${'cards'}`, {\n             method: \"GET\",\n             headers: this._headers\n         })\n             .then(this._checkResponse);\n     }\n\n     getUserInfo() {\n         return fetch(`${this._url}${'users/me'}`, {\n             method: \"GET\",\n             headers: this._headers\n         })\n             .then(this._checkResponse);\n     }\n\n     getAllNeededData() {\n         return Promise.all([this.getUserInfo(), this.getInitialCards()])\n     }\n\n     setNewCard(data) {\n         return fetch(`${this._url}${'cards'}`, {\n             method: \"POST\",\n             headers: this._headers,\n             body: JSON.stringify(data)\n         })\n             .then(this._checkResponse);\n     }\n\n     deleteCard(id) {\n         return fetch(`${this._url}${'cards/'}${id}`, {\n             method: \"DELETE\",\n             headers: this._headers,\n         }).then(this._checkResponse);\n     }\n\n     setUserInfo(data) {\n         return fetch(`${this._url}${'users/me'}`, {\n             method: \"PATCH\",\n             headers: this._headers,\n             body: JSON.stringify(data)\n         })\n             .then(this._checkResponse);\n     }\n\n     setUserAvatar(data) {\n         return fetch(`${this._url}${'users/me/avatar'}`, {\n             method: \"PATCH\",\n             headers: this._headers,\n             body: JSON.stringify(data)\n         })\n             .then(this._checkResponse);\n     }\n\n     changeLikeCardStatus(id, isLiked) {\n         if (isLiked) {\n             return fetch(`${this._url}${'cards/likes/'}${id}`, {\n                 method: \"PUT\",\n                headers: this._headers,\n         }).then(this._checkResponse);\n         } else {\n             return fetch(`${this._url}${'cards/likes/'}${id}`, {\n                 method: \"DELETE\",\n                 headers: this._headers,\n             }).then(this._checkResponse);\n         }\n     }\n }\n\n\n\nconst api = new Api ({\n    url: \"https://mesto.nomoreparties.co/v1/cohort-18/\",\n    headers: {\n        authorization: \"91c2835b-f41e-43e9-bed7-ea071878b36c\",\n        \"Content-Type\": \"application/json\"\n    }\n\n\n});\n\nexport default api","import React from 'react';\n\nconst CurrentUserContext = React.createContext();\n\nexport default CurrentUserContext;","export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from 'react';\nimport Logo from '../images/logo.svg';\n\nconst Header = React.memo((props) => {\n    return (\n        <header className=\"header\">\n            <img src={Logo} className=\"header__logo\" alt=\"Место-Россия\" />\n        </header>\n    );\n})\n\nexport default Header;","import React from 'react';\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nconst Card = React.memo ((props) => {\n    const currentUser = React.useContext(CurrentUserContext);\n    const isOwn = props.card.owner._id === currentUser._id;\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n    const cardDeleteButtonClassName = (\n        `element__button-reset ${isOwn ? 'element__button-reset_active' : ''}`\n    );\n    const cardLikeButtonClassName = (\n        `element__button-like ${isLiked ? 'element__button-like_active' : ''}`\n    );\n\n    function handleClick () {\n        props.onCardClick(props.card);\n    }\n\n    function handleLikeClick () {\n        props.onCardLike(props.card);\n    }\n\n    function handleDeleteClick () {\n        props.onCardDelete(props.card);\n    }\n\n    return (\n        <figure className=\"element\">\n            <button\n                className={cardDeleteButtonClassName}\n                type=\"reset\"\n                aria-label=\"Delete\"\n                onClick={handleDeleteClick}\n            />\n            <div className=\"element__image-box\">\n                <img\n                    src={props.card.link}\n                    className=\"element__image\"\n                    alt={props.card.name}\n                    onClick={handleClick}\n                />\n            </div>\n            <div className=\"element__info\">\n                <h2 className=\"element__title\">{props.card.name}</h2>\n                <div className=\"element__like-block\">\n                    <button\n                        className={cardLikeButtonClassName}\n                        type=\"button\"\n                        aria-label=\"Like\"\n                        onClick={handleLikeClick}\n                    />\n                    <p className=\"element__number-of-likes\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </figure>\n    );\n})\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nconst Main = React.memo ((props) => {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <figure className=\"profile__box\">\n                    <figure className=\"profile__avatar-box\">\n                        <img className=\"profile__avatar\" src = {currentUser.avatar} alt=\"Фотопортрет\"/>\n                        <button className=\"profile__change-avatar-button\" type=\"button\" aria-label=\"Edit\" onClick={props.onEditAvatar}/>\n                    </figure>\n                    <div className=\"profile__info\">\n                        <div className=\"profile__text-block\">\n                            <h1 className=\"profile__name\" id=\"\">{currentUser.name}</h1>\n                            <p className=\"profile__description\">{currentUser.about}</p>\n                        </div>\n                        <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Edit\" onClick={props.onEditProfile}/>\n                    </div>\n                </figure>\n                <button className=\"profile__add-button\"  type=\"button\" area-label=\"Add\" onClick={props.onAddPlace}\n                />\n            </section>\n\n            <section className=\"elements\">\n                {props.cards.map((card) =>\n                    (<Card\n                        key={card._id}\n                        card={card}\n                        onCardClick={props.onCardClick}\n                        onCardLike = {props.onCardLike}\n                        onCardDelete = {props.onCardDelete}\n                    />)\n                    )}\n            </section>\n        </main>\n    );\n})\n\nexport default Main;","import React from 'react';\n\nconst Footer = React.memo ((props) => {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020-{new Date().getFullYear()} Mesto Russia</p>\n        </footer>\n    );\n})\n\nexport default Footer;","import React from 'react';\n\nconst PopupWithForm = React.memo ((props) => {\n\n    return (\n        <div className={`popup popup_type_${props.name}` + (props.isOpen ? ' popup_opened' : '')}>\n            <div className=\"popup__overlay\" onClick={props.onClose} />\n            <form className={`popup__container popup__container_type_${props.name}`} name={props.name}\n                  onSubmit={props.onSubmit}>\n                <button className=\"popup__close-button\" type=\"reset\" aria-label=\"Close\" onClick={props.onClose}/>\n                <h2 className=\"popup__title\">{props.title}</h2>\n                {props.children}\n                <button className={`popup__button popup__button_${props.name}`}>{props.subtitle}</button>\n            </form>\n        </div>\n    );\n})\n\nexport default PopupWithForm;","import React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nconst EditProfilePopup = React.memo ((props) => {\n    const currentUser = useContext(CurrentUserContext);\n    const [formValues, setFormValues] = useState({\n        userName:  \"\",\n        description: \"\",\n    });\n\n    const {userName, description} = formValues;\n\n    useEffect(() => {\n        setFormValues({\n            userName: currentUser.name,\n            description: currentUser.about,});\n    }, [currentUser, props.isOpen]);\n\n    useEffect(() => {\n        if (!props.isOpen) {\n            setFormValues({\n                userName:  currentUser.name,\n                description: currentUser.about,\n            });\n        }\n    }, [currentUser, props.isOpen]);\n\n    function handleInputChange (e) {\n        const {name, value} = e.target;\n        setFormValues(prevState => ({...prevState, [name] : value}))\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({\n            name: userName,\n            about: description,\n        });\n    }\n\n    return (\n        <PopupWithForm\n            name=\"edit\"\n            title=\"Редактировать профиль\"\n            subtitle=\"Сохранить\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n\n            <input\n                className=\"popup__field\"\n                type=\"text\"\n                name=\"userName\"\n                value={userName  || ''}\n                placeholder=\"Имя\"\n                onChange={handleInputChange}\n            />\n\n            <input\n                className=\"popup__field\"\n                type=\"text\"\n                name=\"description\"\n                value={description || ''}\n                placeholder=\"Описание\"\n                onChange={handleInputChange}\n            />\n        </PopupWithForm>\n    );\n})\n\nexport default EditProfilePopup;\n\n","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nconst EditAvatarPopup = React.memo ((props) => {\n    const  [avatar, setAvatar] = React.useState('');\n\n    function handleChangeAvatar(e) {\n        setAvatar(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n            avatar: avatar,\n        });\n    }\n\n    return (\n        <PopupWithForm\n            name=\"change-avatar\"\n            title=\"Обновить аватар\"\n            subtitle=\"Сохранить\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n            <input\n                className=\"popup__field popup__field_type_change-avatar\"\n                value={avatar || ''}\n                id=\"avatar\"\n                type=\"url\"\n                name=\"avatar\"\n                placeholder=\"Ссылка на картинку\"\n                minLength=\"4\"\n                maxLength=\"200\"\n                onChange={handleChangeAvatar}\n            />\n            <span\n                id=\"avatar-error\"\n                className=\"error error_type_avatar\"\n            />\n        </PopupWithForm>\n    );\n})\n\nexport default EditAvatarPopup;","import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\n\nconst AddPlacePopup = React.memo ((props) => {\n    const [name, setName] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n    React.useEffect(() => {\n        if (!props.isOpen) {\n            setName('');\n            setLink('');\n        }\n    }, [props.isOpen]);\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeLink(e) {\n        setLink(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onAddPlace({\n            name,\n            link,\n        });\n    }\n\n    return (\n        <PopupWithForm\n            name=\"add\"\n            title=\"Новое место\"\n            subtitle=\"Создать\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n            <input\n                className=\"popup__field popup__field_type_add\"\n                value={name || ''}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Название\"\n                minLength=\"2\"\n                maxLength=\"30\"\n                onChange={handleChangeName}\n            />\n            <span\n                id=\"name-card-error\"\n                className=\"error error_type_title\"\n            />\n            <input\n                className=\"popup__field popup__field_type_add\"\n                value={link || ''}\n                type=\"url\"\n                name=\"link\"\n                placeholder=\"Ссылка на картинку\"\n                minLength=\"4\"\n                maxLength=\"200\"\n                onChange={handleChangeLink}\n            />\n            <span\n                id=\"link-error\"\n                className=\"error error_type_link\"\n            />\n        </PopupWithForm>\n    );\n})\n\nexport default AddPlacePopup;","import React from 'react';\n\nconst ImagePopup = React.memo ((props) => {\n    return (\n        <div className={`popup popup_type_image ${(props.card ? ' popup_opened' : '')}`}>\n            <div className=\"popup__overlay\" onClick={props.onClose} />\n            <figure className=\"popup__image-block\">\n                <button\n                    className=\"popup__close-button popup__close-button_type_image\"\n                    type=\"reset\"\n                    aria-label=\"Close\"\n                    onClick={props.onClose}\n                />\n                <img\n                    src={props.card ? props.card.link : ''}\n                    className=\"popup__image\"\n                    alt={props.card ? props.card.name : ''}\n                />\n                <p className=\"popup__caption\">{props.card ? props.card.name : ''}</p>\n            </figure>\n        </div>\n    );\n})\n\nexport default ImagePopup;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nconst ConfirmDeletionPopup = React.memo ((props) => {\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onDeleteCard(props.card);\n    }\n\n    return (\n        <PopupWithForm\n            name=\"delete-card\"\n            title=\"Вы уверены?\"\n            subtitle=\"Да\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n        </PopupWithForm>\n    );\n})\n\nexport default ConfirmDeletionPopup;","import React, {useEffect, useState} from 'react';\nimport '../index.css';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from './ImagePopup';\nimport ConfirmDeletionPopup from \"./ConfirmDeletionPopup\";\n\nconst App = React.memo ((props) =>  {\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isConfirmDeletionPopupOpen, setIsConfirmDeletionPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [removedCard, setRemovedCard] = React.useState(null);\n\n\n    useEffect(() => {\n        api.getAllNeededData().then(argument => {\n            const [ currentUser, cards ] = argument\n            setCurrentUser(currentUser)\n            setCards(cards)\n        })\n        .catch((err) => alert(err));\n    }, []);\n\n    function handleEditAvatarClick () {\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n    }\n\n    function handleEditProfileClick () {\n       setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n    }\n\n    function handleAddPlaceClick () {\n      setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n    }\n\n    function handleConfirmDeletionClick (card) {\n        setIsConfirmDeletionPopupOpen(!isConfirmDeletionPopupOpen);\n        setRemovedCard({\n            _id: card._id,\n        })\n    }\n\n    function handleCardClick (card) {\n        setSelectedCard({\n            name: card.name,\n            link: card.link\n        });\n    }\n\n    function handleUpdateUser (avatar) {\n        api.setUserInfo(avatar).then(currentUser => {\n            setCurrentUser(currentUser);\n            closeAllPopups()\n        })\n            .catch((err) => alert(err));\n    }\n\n    function handleUpdateAvatar (data) {\n        api.setUserAvatar(data).then(currentUser => {\n            setCurrentUser(currentUser);\n            closeAllPopups()\n        })\n            .catch((err) => alert(err));\n    }\n\n    function handleAddPlaceSubmit (card) {\n        api.setNewCard(card).then(newCard => {\n            setCards([newCard, ...cards]);\n            closeAllPopups()\n        })\n            .catch((err) => alert(err));\n    }\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            setCards(newCards);\n        })\n            .catch((err) => alert(err));\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id).then(() => {\n            const newCards = cards.filter(c => c._id !== card._id);\n            setCards(newCards);\n            closeAllPopups()\n        })\n        .catch((err) => alert(err));\n    }\n\n    function closeAllPopups () {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsConfirmDeletionPopupOpen(false);\n        setSelectedCard(null);\n    }\n\n    return (\n        <div className=\"page\">\n\n            <CurrentUserContext.Provider value={currentUser}>\n\n                <Header />\n\n                <Main\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                    cards = {cards}\n                    onCardLike = {handleCardLike}\n                    onCardDelete = {handleConfirmDeletionClick}\n                />\n\n                <Footer />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n\n                <ConfirmDeletionPopup\n                    isOpen={isConfirmDeletionPopupOpen}\n                    card = {removedCard}\n                    onClose={closeAllPopups}\n                    onDeleteCard={handleCardDelete}\n                />\n\n                <ImagePopup\n                    card = {selectedCard}\n                    onClose={closeAllPopups}\n                />\n            </CurrentUserContext.Provider>\n\n        </div>\n    );\n})\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}